{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Types } from './Types';\nexport let Fetch;\n\n(function (_Fetch) {\n  const getCurrency = _Fetch.getCurrency = createAsyncThunk(Types.GET_CURRENCY, async () => {\n    const responseArr = [];\n    const apiArr = Types.getCurApi();\n    apiArr.forEach(async api => {\n      const response = await fetch(api, {\n        method: 'GET',\n        redirect: 'follow',\n        headers: Types.getHeaders()\n      });\n      responseArr.push(await response.json());\n    });\n  });\n})(Fetch || (Fetch = {}));\n\nexport let Tools;\n\n(function (_Tools) {\n  const getCurApi = _Tools.getCurApi = () => {\n    const apiArr = [];\n    Types.currencies.forEach(base => {\n      const symbols = Types.currencies.filter(el => el !== base).join(',');\n      apiArr.push(`https://api.apilayer.com/fixer/latest?symbols=${symbols}&base=${base}`);\n    });\n    return apiArr;\n  };\n\n  const getHeaders = _Tools.getHeaders = () => {\n    const myHeaders = new Headers();\n    myHeaders.append('apikey', API_KEY);\n    return myHeaders;\n  };\n})(Tools || (Tools = {}));","map":{"version":3,"names":["createAsyncThunk","Types","getCurrency","GET_CURRENCY","responseArr","apiArr","getCurApi","forEach","api","response","fetch","method","redirect","headers","getHeaders","push","json","Fetch","currencies","base","symbols","filter","el","join","myHeaders","Headers","append","API_KEY","Tools"],"sources":["/Users/maxryaguzov/home_porjects/currency_converter/src/utils/Tools.ts"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { Types } from './Types'\n\nexport namespace Fetch {\n\t/*\n        GET CURRENCY\n    */\n\texport const getCurrency = createAsyncThunk(\n\t\tTypes.GET_CURRENCY,\n\t\tasync () => {\n\t\t\tconst responseArr: string[] = []\n\t\t\tconst apiArr = Types.getCurApi()\n\t\t\tapiArr.forEach(async (api) => {\n\t\t\t\tconst response = await fetch(api, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tredirect: 'follow',\n\t\t\t\t\theaders: Types.getHeaders(),\n\t\t\t\t})\n\t\t\t\tresponseArr.push(await response.json())\n\t\t\t})\n\t\t}\n\t)\n}\n\nexport namespace Tools {\n\texport const getCurApi = (): string[] => {\n\t\tconst apiArr: string[] = []\n\t\tTypes.currencies.forEach((base) => {\n\t\t\tconst symbols = Types.currencies\n\t\t\t\t.filter((el) => el !== base)\n\t\t\t\t.join(',')\n\t\t\tapiArr.push(\n\t\t\t\t`https://api.apilayer.com/fixer/latest?symbols=${symbols}&base=${base}`\n\t\t\t)\n\t\t})\n\t\treturn apiArr\n\t}\n\n\texport const getHeaders = (): Headers => {\n\t\tconst myHeaders = new Headers()\n\t\tmyHeaders.append('apikey', API_KEY)\n\t\treturn myHeaders\n\t}\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA;;;EAIQ,MAAMC,WAAW,wBAAGF,gBAAgB,CAC1CC,KAAK,CAACE,YADoC,EAE1C,YAAY;IACX,MAAMC,WAAqB,GAAG,EAA9B;IACA,MAAMC,MAAM,GAAGJ,KAAK,CAACK,SAAN,EAAf;IACAD,MAAM,CAACE,OAAP,CAAe,MAAOC,GAAP,IAAe;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;QACjCG,MAAM,EAAE,KADyB;QAEjCC,QAAQ,EAAE,QAFuB;QAGjCC,OAAO,EAAEZ,KAAK,CAACa,UAAN;MAHwB,CAAN,CAA5B;MAKAV,WAAW,CAACW,IAAZ,CAAiB,MAAMN,QAAQ,CAACO,IAAT,EAAvB;IACA,CAPD;EAQA,CAbyC,CAApC;GAJSC,K,KAAAA,K;;AAqBjB;;;EACQ,MAAMX,SAAS,sBAAG,MAAgB;IACxC,MAAMD,MAAgB,GAAG,EAAzB;IACAJ,KAAK,CAACiB,UAAN,CAAiBX,OAAjB,CAA0BY,IAAD,IAAU;MAClC,MAAMC,OAAO,GAAGnB,KAAK,CAACiB,UAAN,CACdG,MADc,CACNC,EAAD,IAAQA,EAAE,KAAKH,IADR,EAEdI,IAFc,CAET,GAFS,CAAhB;MAGAlB,MAAM,CAACU,IAAP,CACE,iDAAgDK,OAAQ,SAAQD,IAAK,EADvE;IAGA,CAPD;IAQA,OAAOd,MAAP;EACA,CAXM;;EAaA,MAAMS,UAAU,uBAAG,MAAe;IACxC,MAAMU,SAAS,GAAG,IAAIC,OAAJ,EAAlB;IACAD,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2BC,OAA3B;IACA,OAAOH,SAAP;EACA,CAJM;GAdSI,K,KAAAA,K"},"metadata":{},"sourceType":"module"}