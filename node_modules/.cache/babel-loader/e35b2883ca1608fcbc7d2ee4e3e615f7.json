{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Types } from './Types';\nexport let Fetch;\n\n(function (_Fetch) {\n  const getCurrency = _Fetch.getCurrency = createAsyncThunk(Types.GET_CURRENCY, async () => {\n    const responseArr = [];\n    const apiArr = Types.getCurApi();\n    apiArr.forEach(async api => {\n      const response = await fetch(api, {\n        method: 'GET',\n        mode: 'cors'\n      });\n      responseArr.push(await response.json());\n    });\n  });\n})(Fetch || (Fetch = {}));","map":{"version":3,"names":["createAsyncThunk","Types","getCurrency","GET_CURRENCY","responseArr","apiArr","getCurApi","forEach","api","response","fetch","method","mode","push","json","Fetch"],"sources":["/Users/maxryaguzov/home_porjects/currency_converter/src/utils/Tools.ts"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { Types } from './Types'\n\nexport namespace Fetch {\n\t/*\n        GET CURRENCY\n    */\n\texport const getCurrency = createAsyncThunk(\n\t\tTypes.GET_CURRENCY,\n\t\tasync () => {\n\t\t\tconst responseArr: string[] = []\n\t\t\tconst apiArr = Types.getCurApi()\n\t\t\tapiArr.forEach(async (api) => {\n\t\t\t\tconst response = await fetch(api, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tmode: 'cors',\n\t\t\t\t})\n\t\t\t\tresponseArr.push(await response.json())\n\t\t\t})\n\t\t}\n\t)\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA;;;EAIQ,MAAMC,WAAW,wBAAGF,gBAAgB,CAC1CC,KAAK,CAACE,YADoC,EAE1C,YAAY;IACX,MAAMC,WAAqB,GAAG,EAA9B;IACA,MAAMC,MAAM,GAAGJ,KAAK,CAACK,SAAN,EAAf;IACAD,MAAM,CAACE,OAAP,CAAe,MAAOC,GAAP,IAAe;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;QACjCG,MAAM,EAAE,KADyB;QAEjCC,IAAI,EAAE;MAF2B,CAAN,CAA5B;MAIAR,WAAW,CAACS,IAAZ,CAAiB,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;IACA,CAND;EAOA,CAZyC,CAApC;GAJSC,K,KAAAA,K"},"metadata":{},"sourceType":"module"}