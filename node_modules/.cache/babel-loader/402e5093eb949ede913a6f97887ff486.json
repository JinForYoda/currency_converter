{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { Fetch } from '../../utils/Tools';\nconst initialState = {\n  currency: []\n};\nexport const currency = createSlice({\n  name: 'currency',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(Fetch.getCurrency.fulfilled, (state, action) => {\n      state.currency = action.payload;\n    });\n  }\n}); // export const {} = str.actions\n\nexport default currency.reducer;","map":{"version":3,"names":["createSlice","Fetch","initialState","currency","name","reducers","extraReducers","builder","addCase","getCurrency","fulfilled","state","action","payload","reducer"],"sources":["/Users/maxryaguzov/home_porjects/currency_converter/src/app/reducers/currency.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Types } from '../../utils/Types'\nimport { Fetch } from '../../utils/Tools'\n\nconst initialState: Types.CurrencyState = {\n\tcurrency: [],\n}\n\nexport const currency = createSlice({\n\tname: 'currency',\n\tinitialState,\n\treducers: {},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(\n\t\t\tFetch.getCurrency.fulfilled,\n\t\t\t(state, action: PayloadAction<Types.Currency[]>) => {\n\t\t\t\tstate.currency = action.payload\n\t\t\t}\n\t\t)\n\t},\n})\n\n// export const {} = str.actions\nexport default currency.reducer\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,MAAMC,YAAiC,GAAG;EACzCC,QAAQ,EAAE;AAD+B,CAA1C;AAIA,OAAO,MAAMA,QAAQ,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,UAD6B;EAEnCF,YAFmC;EAGnCG,QAAQ,EAAE,EAHyB;EAInCC,aAAa,EAAGC,OAAD,IAAa;IAC3BA,OAAO,CAACC,OAAR,CACCP,KAAK,CAACQ,WAAN,CAAkBC,SADnB,EAEC,CAACC,KAAD,EAAQC,MAAR,KAAoD;MACnDD,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAxB;IACA,CAJF;EAMA;AAXkC,CAAD,CAA5B,C,CAcP;;AACA,eAAeV,QAAQ,CAACW,OAAxB"},"metadata":{},"sourceType":"module"}