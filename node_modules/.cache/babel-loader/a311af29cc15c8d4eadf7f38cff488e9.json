{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Types } from './Types';\nexport let Tools;\n\n(function (_Tools) {\n  const getCurApiArr = _Tools.getCurApiArr = () => {\n    const apiArr = [];\n    Types.currencies.forEach(base_currency => {\n      const currencies = Types.currencies.filter(cur => cur !== base_currency).join('%2C');\n      apiArr.push(Types.API + `?apikey=${Types.API_KEY}&currencies=${currencies}&base_currency=${base_currency}`);\n    });\n    return apiArr;\n  };\n\n  const getHeaders = _Tools.getHeaders = () => {\n    const myHeaders = new Headers();\n    myHeaders.append('apikey', Types.API_KEY);\n    return myHeaders;\n  };\n})(Tools || (Tools = {}));\n\nexport let Fetch;\n\n(function (_Fetch) {\n  const getCurrency = _Fetch.getCurrency = createAsyncThunk(Types.GET_CURRENCY, async () => {\n    const currencyArr = [];\n    const apiArr = Tools.getCurApiArr();\n    apiArr.forEach(async api => {\n      const response = await fetch(api);\n      const currency = await response.json();\n      currencyArr.push(currency);\n    });\n    return currencyArr;\n  });\n})(Fetch || (Fetch = {}));","map":{"version":3,"names":["createAsyncThunk","Types","getCurApiArr","apiArr","currencies","forEach","base_currency","filter","cur","join","push","API","API_KEY","getHeaders","myHeaders","Headers","append","Tools","getCurrency","GET_CURRENCY","currencyArr","api","response","fetch","currency","json","Fetch"],"sources":["/Users/maxryaguzov/home_porjects/currency_converter/src/utils/Tools.ts"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { Types } from './Types'\n\nexport namespace Tools {\n\texport const getCurApiArr = (): string[] => {\n\t\tconst apiArr: string[] = []\n\t\tTypes.currencies.forEach((base_currency) => {\n\t\t\tconst currencies = Types.currencies\n\t\t\t\t.filter((cur) => cur !== base_currency)\n\t\t\t\t.join('%2C')\n\t\t\tapiArr.push(\n\t\t\t\tTypes.API +\n\t\t\t\t\t`?apikey=${Types.API_KEY}&currencies=${currencies}&base_currency=${base_currency}`\n\t\t\t)\n\t\t})\n\t\treturn apiArr\n\t}\n\n\texport const getHeaders = (): Headers => {\n\t\tconst myHeaders = new Headers()\n\t\tmyHeaders.append('apikey', Types.API_KEY)\n\t\treturn myHeaders\n\t}\n}\n\nexport namespace Fetch {\n\t/*\n        GET CURRENCY\n    */\n\texport const getCurrency = createAsyncThunk(\n\t\tTypes.GET_CURRENCY,\n\t\tasync () => {\n\t\t\tconst currencyArr: Types.Currencies = []\n\t\t\tconst apiArr = Tools.getCurApiArr()\n\t\t\tapiArr.forEach(async (api) => {\n\t\t\t\tconst response = await fetch(api)\n\t\t\t\tconst currency: Types.Currency = await response.json()\n\t\t\t\tcurrencyArr.push(currency)\n\t\t\t})\n\t\t\treturn currencyArr\n\t\t}\n\t)\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA;;;EACQ,MAAMC,YAAY,yBAAG,MAAgB;IAC3C,MAAMC,MAAgB,GAAG,EAAzB;IACAF,KAAK,CAACG,UAAN,CAAiBC,OAAjB,CAA0BC,aAAD,IAAmB;MAC3C,MAAMF,UAAU,GAAGH,KAAK,CAACG,UAAN,CACjBG,MADiB,CACTC,GAAD,IAASA,GAAG,KAAKF,aADP,EAEjBG,IAFiB,CAEZ,KAFY,CAAnB;MAGAN,MAAM,CAACO,IAAP,CACCT,KAAK,CAACU,GAAN,GACE,WAAUV,KAAK,CAACW,OAAQ,eAAcR,UAAW,kBAAiBE,aAAc,EAFnF;IAIA,CARD;IASA,OAAOH,MAAP;EACA,CAZM;;EAcA,MAAMU,UAAU,uBAAG,MAAe;IACxC,MAAMC,SAAS,GAAG,IAAIC,OAAJ,EAAlB;IACAD,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2Bf,KAAK,CAACW,OAAjC;IACA,OAAOE,SAAP;EACA,CAJM;GAfSG,K,KAAAA,K;;AAsBjB;;;EAIQ,MAAMC,WAAW,wBAAGlB,gBAAgB,CAC1CC,KAAK,CAACkB,YADoC,EAE1C,YAAY;IACX,MAAMC,WAA6B,GAAG,EAAtC;IACA,MAAMjB,MAAM,GAAGc,KAAK,CAACf,YAAN,EAAf;IACAC,MAAM,CAACE,OAAP,CAAe,MAAOgB,GAAP,IAAe;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;MACA,MAAMG,QAAwB,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvC;MACAL,WAAW,CAACV,IAAZ,CAAiBc,QAAjB;IACA,CAJD;IAKA,OAAOJ,WAAP;EACA,CAXyC,CAApC;GAJSM,K,KAAAA,K"},"metadata":{},"sourceType":"module"}