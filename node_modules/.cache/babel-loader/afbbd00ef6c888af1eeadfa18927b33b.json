{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Types } from './Types';\nexport let Fetch;\n\n(function (_Fetch) {\n  const getCurrency = _Fetch.getCurrency = createAsyncThunk(Types.GET_CURRENCY, async () => {\n    const apiArr = Types.getCurApi;\n    const response = await fetch(Types.CUR_API, {\n      method: 'GET',\n      mode: 'cors'\n    });\n    return response.json();\n  });\n})(Fetch || (Fetch = {}));","map":{"version":3,"names":["createAsyncThunk","Types","getCurrency","GET_CURRENCY","apiArr","getCurApi","response","fetch","CUR_API","method","mode","json","Fetch"],"sources":["/Users/maxryaguzov/home_porjects/currency_converter/src/utils/Tools.ts"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { Types } from './Types'\n\nexport namespace Fetch {\n\t/*\n        GET CURRENCY\n    */\n\texport const getCurrency = createAsyncThunk(\n\t\tTypes.GET_CURRENCY,\n\t\tasync () => {\n\t\t\tconst apiArr = Types.getCurApi\n\t\t\tconst response = await fetch(Types.CUR_API, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\tmode: 'cors',\n\t\t\t})\n\t\t\treturn response.json()\n\t\t}\n\t)\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA;;;EAIQ,MAAMC,WAAW,wBAAGF,gBAAgB,CAC1CC,KAAK,CAACE,YADoC,EAE1C,YAAY;IACX,MAAMC,MAAM,GAAGH,KAAK,CAACI,SAArB;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,KAAK,CAACO,OAAP,EAAgB;MAC3CC,MAAM,EAAE,KADmC;MAE3CC,IAAI,EAAE;IAFqC,CAAhB,CAA5B;IAIA,OAAOJ,QAAQ,CAACK,IAAT,EAAP;EACA,CATyC,CAApC;GAJSC,K,KAAAA,K"},"metadata":{},"sourceType":"module"}