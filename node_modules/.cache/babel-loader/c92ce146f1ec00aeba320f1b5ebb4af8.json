{"ast":null,"code":"var _jsxFileName = \"/Users/maxryaguzov/home_porjects/currency_converter/src/components/Main/Post/PostList.tsx\",\n    _s = $RefreshSig$();\n\nimport { Container, Row } from 'react-bootstrap';\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\nimport { BlogFetch as Fetch } from '../../../utils/Tools';\nimport { BlogTypes as Types } from '../../../utils/Types';\nimport Loader from '../../Loader';\nimport PostCard from './PostCard';\nimport PostCreator from './PostCreator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostList() {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const postList = useAppSelector(store => store.postList.postList);\n  const loadingStatus = useAppSelector(store => store.postList.loading); // after deleting need to update posts list\n\n  const postDelete = async id => {\n    await dispatch(Fetch.deletePost(id));\n    await dispatch(Fetch.getPostList());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(PostCreator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), loadingStatus !== Types.LoadingType.pending ? /*#__PURE__*/_jsxDEV(Row, {\n      className: \"gap-5\",\n      children: postList.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post,\n        onDelete: postDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostList, \"mMQz7dZwWTH7DEBJoSbsOH5mTic=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["Container","Row","useAppDispatch","useAppSelector","BlogFetch","Fetch","BlogTypes","Types","Loader","PostCard","PostCreator","PostList","dispatch","postList","store","loadingStatus","loading","postDelete","id","deletePost","getPostList","LoadingType","pending","map","post"],"sources":["/Users/maxryaguzov/home_porjects/currency_converter/src/components/Main/Post/PostList.tsx"],"sourcesContent":["import { Container, Row } from 'react-bootstrap'\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks'\nimport { BlogFetch as Fetch } from '../../../utils/Tools'\nimport { BlogTypes as Types } from '../../../utils/Types'\nimport Loader from '../../Loader'\nimport PostCard from './PostCard'\nimport PostCreator from './PostCreator'\n\nexport default function PostList() {\n    const dispatch = useAppDispatch()\n    const postList = useAppSelector((store) => store.postList.postList)\n    const loadingStatus = useAppSelector((store) => store.postList.loading)\n\n    // after deleting need to update posts list\n    const postDelete = async (id: string) => {\n        await dispatch(Fetch.deletePost(id))\n        await dispatch(Fetch.getPostList())\n    }\n\n    return (\n        <Container fluid>\n            <PostCreator />\n            {loadingStatus !== Types.LoadingType.pending ? (\n                <Row className=\"gap-5\">\n                    {postList.map((post: Types.PostItem) => (\n                        <PostCard post={post} onDelete={postDelete} />\n                    ))}\n                </Row>\n            ) : (\n                <Loader />\n            )}\n        </Container>\n    )\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,oBAA/C;AACA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,sBAAnC;AACA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,sBAAnC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EAC/B,MAAMC,QAAQ,GAAGV,cAAc,EAA/B;EACA,MAAMW,QAAQ,GAAGV,cAAc,CAAEW,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeA,QAA3B,CAA/B;EACA,MAAME,aAAa,GAAGZ,cAAc,CAAEW,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeG,OAA3B,CAApC,CAH+B,CAK/B;;EACA,MAAMC,UAAU,GAAG,MAAOC,EAAP,IAAsB;IACrC,MAAMN,QAAQ,CAACP,KAAK,CAACc,UAAN,CAAiBD,EAAjB,CAAD,CAAd;IACA,MAAMN,QAAQ,CAACP,KAAK,CAACe,WAAN,EAAD,CAAd;EACH,CAHD;;EAKA,oBACI,QAAC,SAAD;IAAW,KAAK,MAAhB;IAAA,wBACI,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKL,aAAa,KAAKR,KAAK,CAACc,WAAN,CAAkBC,OAApC,gBACG,QAAC,GAAD;MAAK,SAAS,EAAC,OAAf;MAAA,UACKT,QAAQ,CAACU,GAAT,CAAcC,IAAD,iBACV,QAAC,QAAD;QAAU,IAAI,EAAEA,IAAhB;QAAsB,QAAQ,EAAEP;MAAhC;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QADH,gBAOG,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QATR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;GAzBuBN,Q;UACHT,c,EACAC,c,EACKA,c;;;KAHFQ,Q"},"metadata":{},"sourceType":"module"}