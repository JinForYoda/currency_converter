{"ast":null,"code":"var _jsxFileName = \"/Users/maxryaguzov/home_porjects/currency_converter/src/components/Main/Post/PostUpdater.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useAppDispatch } from '../../../app/hooks';\nimport { BlogFetch as Fetch } from '../../../utils/Tools';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostUpdater(_ref) {\n  _s();\n\n  let {\n    specPost\n  } = _ref;\n  const dispatch = useAppDispatch(); // states for updating only if fields have changed\n\n  const [newTitle, setNewTitle] = useState(specPost.title);\n  const [newBody, setNewBody] = useState(specPost.body);\n  useEffect(() => {\n    setNewTitle(specPost.title);\n    setNewBody(specPost.body);\n  }, [specPost]); // after pushing post need to update posts list and this post\n\n  const updatePost = async e => {\n    e.preventDefault();\n    const data = {\n      title: newTitle,\n      body: newBody,\n      comments: specPost.comments,\n      id: specPost.id\n    };\n    await dispatch(Fetch.updateSpecPost(data));\n    await dispatch(Fetch.getPostList());\n    await dispatch(Fetch.getSpecPost(specPost.id));\n  };\n\n  const isFormWrong = () => {\n    return newTitle === specPost.title && newBody === specPost.body || !newTitle || !newBody;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"w-75\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicTitle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter titile\",\n          onChange: e => setNewTitle(e.target.value),\n          value: newTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicBody\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Type some text here\",\n          onChange: e => setNewBody(e.target.value),\n          value: newBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: e => updatePost(e),\n        disabled: isFormWrong(),\n        children: \"Update Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostUpdater, \"Eh/A3ayek6WdocykJgB9XU4o2x4=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = PostUpdater;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostUpdater\");","map":{"version":3,"names":["React","useEffect","useState","Button","Form","useAppDispatch","BlogFetch","Fetch","PostUpdater","specPost","dispatch","newTitle","setNewTitle","title","newBody","setNewBody","body","updatePost","e","preventDefault","data","comments","id","updateSpecPost","getPostList","getSpecPost","isFormWrong","target","value"],"sources":["/Users/maxryaguzov/home_porjects/currency_converter/src/components/Main/Post/PostUpdater.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useAppDispatch } from '../../../app/hooks'\nimport { BlogTypes as Types } from '../../../utils/Types'\nimport { BlogFetch as Fetch } from '../../../utils/Tools'\n\ninterface PostUpdaterProprs {\n    specPost: Types.SpecPostItem\n}\n\nexport default function PostUpdater({ specPost }: PostUpdaterProprs) {\n    const dispatch = useAppDispatch()\n\n    // states for updating only if fields have changed\n    const [newTitle, setNewTitle] = useState(specPost.title)\n    const [newBody, setNewBody] = useState(specPost.body)\n\n    useEffect(() => {\n        setNewTitle(specPost.title)\n        setNewBody(specPost.body)\n    }, [specPost])\n\n    // after pushing post need to update posts list and this post\n    const updatePost = async (\n        e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n    ) => {\n        e.preventDefault()\n        const data: Types.SpecPostItem = {\n            title: newTitle,\n            body: newBody,\n            comments: specPost.comments,\n            id: specPost.id,\n        }\n        await dispatch(Fetch.updateSpecPost(data))\n        await dispatch(Fetch.getPostList())\n        await dispatch(Fetch.getSpecPost(specPost.id))\n    }\n\n    const isFormWrong = (): boolean => {\n        return (\n            (newTitle === specPost.title && newBody === specPost.body) ||\n            !newTitle ||\n            !newBody\n        )\n    }\n\n    return (\n        <div className=\"formWrapper\">\n            <h3>Update Post</h3>\n            <Form className=\"w-75\">\n                <Form.Group className=\"mb-3\" controlId=\"formBasicTitle\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"Enter titile\"\n                        onChange={(e) => setNewTitle(e.target.value)}\n                        value={newTitle}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicBody\">\n                    <Form.Label>Text</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"Type some text here\"\n                        onChange={(e) => setNewBody(e.target.value)}\n                        value={newBody}\n                    />\n                </Form.Group>\n                <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    onClick={(e) => updatePost(e)}\n                    disabled={isFormWrong()}\n                >\n                    Update Post\n                </Button>\n            </Form>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}